{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","Nweets","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","update","toggleEditing","src","width","height","NweetFactory","userObj","attachment","setAttachment","fileInput","useRef","nweet","setNweet","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","console","log","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","current","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Nweet","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a841ace.chunk.js","sourcesContent":["import  firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService} from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    \r\n\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value},\r\n        } = event;\r\n        if (name === \"email\"){\r\n            setEmail(value)\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if (newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n        } catch(error){\r\n        }\r\n    };\r\n\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange}/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sing In\" : \"Create Account\"}\r\n            </span>\r\n            \r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","\r\nimport { authService, firebaseInstance} from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) =>  {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n    \r\n    \r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService, stprageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweets = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);        \r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    const toggleEditing = () => setEditing ((prev) => !prev);\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"update Nweet\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancle</button>\r\n                </>\r\n            ):(\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && (\r\n                    <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n                )}\r\n                {isOwner && (\r\n                <>\r\n                    <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                    <button onClick={toggleEditing}>Edit Nweet</button>\r\n                </>\r\n            )}  \r\n            \r\n                </>\r\n            )}            \r\n        </div>\r\n    );\r\n};\r\nexport default Nweets;","import {v4 as uuidv4} from \"uuid\";\r\nimport {dbService, storageService } from \"fbase\";\r\nimport { useState, useRef } from \"react\";\r\nconst NweetFactory =({userObj}) => {\r\n    const [attachment, setAttachment ] = useState(\"\");\r\n    const fileInput = useRef();\r\n    const [nweet, setNweet] = useState(\"\");\r\n\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if (attachmentUrl !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        \r\n    };\r\n\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: {value}, \r\n        }=event;\r\n        setNweet(value);\r\n    };\r\n\r\n\r\n    const onFileChange = (event) => {\r\n        console.log(event.target.files)\r\n            const {\r\n                target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result } ,\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n        };\r\n\r\n\r\n    const onClearAttachment = () => {\r\n            fileInput.current.value = \"\";\r\n            setAttachment(\"\");\r\n        };\r\n\r\n        \r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input value={nweet} onChange={onChange} type=\"text\" \r\n            placeholder=\"place holder at home.js onsubmit\" maxLength={120} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            \r\n            <br/>\r\n            <input ref={fileInput} type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n            <br/>\r\n            {attachment && (\r\n            <div>\r\n                <img src={attachment}  width=\"200px\" height=\"200px\" />\r\n                <button onClick={onClearAttachment}>Clear</button>\r\n            </div>\r\n            )}\r\n        </form>\r\n    );\r\n  \r\n};\r\n\r\nexport default NweetFactory;","\r\nimport { useState, useEffect } from \"react\";\r\nimport { dbService  } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n       dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n           const newArray = snapshot.docs.map((document) => ({\r\n               id: document.id,\r\n               ...document.data(),\r\n           }));\r\n           setNweets(newArray);\r\n       })\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <>\r\n        <NweetFactory userObj={userObj}/>\r\n        <div>\r\n            {nweets.map((nweet) => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n            ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport {useState, useEffect} from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Profile =({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/)\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({ displayName: newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input onChange= {onChange} type=\"text\" placeholder=\"별명\" value={newDisplayName}/>\r\n            <input type=\"submit\"/>\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    )\r\n}\r\nexport default Profile; ","import {Link} from \"react-router-dom\";\r\n\r\nconst Navigation =({userObj}) =>{\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ( {isLoggedIn,userObj, refreshUser} ) => {\r\n    // const[isLoggedIn,setIsLoggedIn] = useState(false);\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                    </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import {useEffect, useState} from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport {  authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user){\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  },[]);\r\n\r\n\r\n  const refreshUser =() =>{\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n      <AppRouter \r\n      refreshUser={refreshUser} \r\n      isLoggedIn={Boolean(userObj)} \r\n      userObj={userObj}\r\n      />\r\n      ):(\r\n        \"initializing...\"\r\n        )}\r\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\r\n    </>\r\n  );  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}